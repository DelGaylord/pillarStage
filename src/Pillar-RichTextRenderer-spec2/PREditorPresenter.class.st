Class {
	#name : #PREditorPresenter,
	#superclass : #SpPresenter,
	#instVars : [
		'parseButton',
		'changeButton',
		'syntaxState',
		'screen',
		'textInput',
		'textOutput',
		'morphWriter',
		'parser'
	],
	#category : #'Pillar-RichTextRenderer-spec2'
}

{ #category : #specs }
PREditorPresenter class >> defaultSpec [
	^ SpBoxLayout newVertical
		add: (SpBoxLayout newHorizontal
			add: #changeButton ;
			add: #parseButton ;
		yourself) height: 30;
		add: #screen withConstraints: [:c | c expand: false];
		add: (SpBoxLayout newHorizontal
			add: #textInput;
			add: #textOutput;
		yourself);
yourself
]

{ #category : #initialization }
PREditorPresenter >> connectPresenters [
	| document |
	parseButton action: [ 
		document := parser new parse: textInput text.
		textOutput text: (morphWriter start: document)
		 ].
	changeButton action: [ 
		syntaxState := syntaxState next new.
		parser := syntaxState parser.
		changeButton label: syntaxState label.
		textInput text: syntaxState exampleText.
		textOutput text: ''.
		self screenLabelWith: syntaxState name.
		 ].
	
]

{ #category : #api }
PREditorPresenter >> initialExtent [
	^ 800@600
]

{ #category : #initialization }
PREditorPresenter >> initializePresenters [
	morphWriter := PRRichTextComposer new.
	syntaxState := PRPillarState new.
	parser := syntaxState parser.
	
	parseButton := self newButton.
	parseButton label: 'Parse'.
	
	changeButton := self newButton.
	changeButton label: syntaxState label.
	
	textInput := self newText.
	textInput text: '% Type your markep-up text here. Parse it and see right the output generated by RichText', String cr, String cr, syntaxState exampleText.
	
	textOutput := self newText.
	textOutput text: ''.
	
	screen :=  self newLabel.
	self screenLabelWith: syntaxState name.
	
]

{ #category : #initialization }
PREditorPresenter >> initializeWindow: aWindowPresenter [
	aWindowPresenter
		title: self title;
		initialExtent: self initialExtent.	
]

{ #category : #api }
PREditorPresenter >> screenLabelWith: aName [
	screen label: 'Your current syntax is : ', aName string.
]

{ #category : #api }
PREditorPresenter >> title [
	^ 'Pillar RichText-based Editor'
]
